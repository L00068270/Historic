#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace library
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="library")]
	public partial class LinqAzureDatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPublisher(Publisher instance);
    partial void UpdatePublisher(Publisher instance);
    partial void DeletePublisher(Publisher instance);
    partial void InsertBook(Book instance);
    partial void UpdateBook(Book instance);
    partial void DeleteBook(Book instance);
    partial void InsertJournal(Journal instance);
    partial void UpdateJournal(Journal instance);
    partial void DeleteJournal(Journal instance);
    partial void InsertDVD(DVD instance);
    partial void UpdateDVD(DVD instance);
    partial void DeleteDVD(DVD instance);
    partial void InsertConferenceProceeding(ConferenceProceeding instance);
    partial void UpdateConferenceProceeding(ConferenceProceeding instance);
    partial void DeleteConferenceProceeding(ConferenceProceeding instance);
    partial void InsertReferenceBook(ReferenceBook instance);
    partial void UpdateReferenceBook(ReferenceBook instance);
    partial void DeleteReferenceBook(ReferenceBook instance);
    partial void InsertLibraryMember(LibraryMember instance);
    partial void UpdateLibraryMember(LibraryMember instance);
    partial void DeleteLibraryMember(LibraryMember instance);
    #endregion
		
		public LinqAzureDatabaseDataContext() : 
				base(global::library.Properties.Settings.Default.libraryConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinqAzureDatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqAzureDatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqAzureDatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqAzureDatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Publisher> Publishers
		{
			get
			{
				return this.GetTable<Publisher>();
			}
		}
		
		public System.Data.Linq.Table<Book> Books
		{
			get
			{
				return this.GetTable<Book>();
			}
		}
		
		public System.Data.Linq.Table<Journal> Journals
		{
			get
			{
				return this.GetTable<Journal>();
			}
		}
		
		public System.Data.Linq.Table<DVD> DVDs
		{
			get
			{
				return this.GetTable<DVD>();
			}
		}
		
		public System.Data.Linq.Table<ConferenceProceeding> ConferenceProceedings
		{
			get
			{
				return this.GetTable<ConferenceProceeding>();
			}
		}
		
		public System.Data.Linq.Table<ReferenceBook> ReferenceBooks
		{
			get
			{
				return this.GetTable<ReferenceBook>();
			}
		}
		
		public System.Data.Linq.Table<LibraryMember> LibraryMembers
		{
			get
			{
				return this.GetTable<LibraryMember>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Publisher")]
	public partial class Publisher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PublisherID;
		
		private string _PublisherName;
		
		private string _Email;
		
		private string _ContactNumber;
		
		private string _Address;
		
		private string _Street;
		
		private string _Town;
		
		private string _County;
		
		private string _Country;
		
		private string _Postcode;
		
		private string _Paidout;
		
		private string _AccountNumber;
		
		private EntitySet<Book> _Books;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPublisherIDChanging(int value);
    partial void OnPublisherIDChanged();
    partial void OnPublisherNameChanging(string value);
    partial void OnPublisherNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnContactNumberChanging(string value);
    partial void OnContactNumberChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnTownChanging(string value);
    partial void OnTownChanged();
    partial void OnCountyChanging(string value);
    partial void OnCountyChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnPostcodeChanging(string value);
    partial void OnPostcodeChanged();
    partial void OnPaidoutChanging(string value);
    partial void OnPaidoutChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    #endregion
		
		public Publisher()
		{
			this._Books = new EntitySet<Book>(new Action<Book>(this.attach_Books), new Action<Book>(this.detach_Books));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublisherID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PublisherID
		{
			get
			{
				return this._PublisherID;
			}
			set
			{
				if ((this._PublisherID != value))
				{
					this.OnPublisherIDChanging(value);
					this.SendPropertyChanging();
					this._PublisherID = value;
					this.SendPropertyChanged("PublisherID");
					this.OnPublisherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublisherName", DbType="VarChar(50)")]
		public string PublisherName
		{
			get
			{
				return this._PublisherName;
			}
			set
			{
				if ((this._PublisherName != value))
				{
					this.OnPublisherNameChanging(value);
					this.SendPropertyChanging();
					this._PublisherName = value;
					this.SendPropertyChanged("PublisherName");
					this.OnPublisherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(30)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="VarChar(50)")]
		public string ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this.OnContactNumberChanging(value);
					this.SendPropertyChanging();
					this._ContactNumber = value;
					this.SendPropertyChanged("ContactNumber");
					this.OnContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(30)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="VarChar(30)")]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Town", DbType="VarChar(30)")]
		public string Town
		{
			get
			{
				return this._Town;
			}
			set
			{
				if ((this._Town != value))
				{
					this.OnTownChanging(value);
					this.SendPropertyChanging();
					this._Town = value;
					this.SendPropertyChanged("Town");
					this.OnTownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_County", DbType="VarChar(30)")]
		public string County
		{
			get
			{
				return this._County;
			}
			set
			{
				if ((this._County != value))
				{
					this.OnCountyChanging(value);
					this.SendPropertyChanging();
					this._County = value;
					this.SendPropertyChanged("County");
					this.OnCountyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="VarChar(30)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postcode", DbType="VarChar(30)")]
		public string Postcode
		{
			get
			{
				return this._Postcode;
			}
			set
			{
				if ((this._Postcode != value))
				{
					this.OnPostcodeChanging(value);
					this.SendPropertyChanging();
					this._Postcode = value;
					this.SendPropertyChanged("Postcode");
					this.OnPostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paidout", DbType="VarChar(50)")]
		public string Paidout
		{
			get
			{
				return this._Paidout;
			}
			set
			{
				if ((this._Paidout != value))
				{
					this.OnPaidoutChanging(value);
					this.SendPropertyChanging();
					this._Paidout = value;
					this.SendPropertyChanged("Paidout");
					this.OnPaidoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="VarChar(50)")]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Publisher_Book", Storage="_Books", ThisKey="PublisherID", OtherKey="PublisherID")]
		public EntitySet<Book> Books
		{
			get
			{
				return this._Books;
			}
			set
			{
				this._Books.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Books(Book entity)
		{
			this.SendPropertyChanging();
			entity.Publisher = this;
		}
		
		private void detach_Books(Book entity)
		{
			this.SendPropertyChanging();
			entity.Publisher = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Book")]
	public partial class Book : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ISBN;
		
		private string _Title;
		
		private string _Author;
		
		private int _CopiesTotal;
		
		private int _CopiesAvailable;
		
		private int _CopiesOut;
		
		private string _SubjectArea;
		
		private string _YearOfPublication;
		
		private string _Keyword;
		
		private System.Nullable<int> _BookID;
		
		private string _ShelfNumber;
		
		private string _Status;
		
		private System.Nullable<int> _PublisherID;
		
		private EntityRef<Publisher> _Publisher;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnISBNChanging(int value);
    partial void OnISBNChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnCopiesTotalChanging(int value);
    partial void OnCopiesTotalChanged();
    partial void OnCopiesAvailableChanging(int value);
    partial void OnCopiesAvailableChanged();
    partial void OnCopiesOutChanging(int value);
    partial void OnCopiesOutChanged();
    partial void OnSubjectAreaChanging(string value);
    partial void OnSubjectAreaChanged();
    partial void OnYearOfPublicationChanging(string value);
    partial void OnYearOfPublicationChanged();
    partial void OnKeywordChanging(string value);
    partial void OnKeywordChanged();
    partial void OnBookIDChanging(System.Nullable<int> value);
    partial void OnBookIDChanged();
    partial void OnShelfNumberChanging(string value);
    partial void OnShelfNumberChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnPublisherIDChanging(System.Nullable<int> value);
    partial void OnPublisherIDChanged();
    #endregion
		
		public Book()
		{
			this._Publisher = default(EntityRef<Publisher>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISBN", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ISBN
		{
			get
			{
				return this._ISBN;
			}
			set
			{
				if ((this._ISBN != value))
				{
					this.OnISBNChanging(value);
					this.SendPropertyChanging();
					this._ISBN = value;
					this.SendPropertyChanged("ISBN");
					this.OnISBNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._Author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CopiesTotal", DbType="Int NOT NULL")]
		public int CopiesTotal
		{
			get
			{
				return this._CopiesTotal;
			}
			set
			{
				if ((this._CopiesTotal != value))
				{
					this.OnCopiesTotalChanging(value);
					this.SendPropertyChanging();
					this._CopiesTotal = value;
					this.SendPropertyChanged("CopiesTotal");
					this.OnCopiesTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CopiesAvailable", DbType="Int NOT NULL")]
		public int CopiesAvailable
		{
			get
			{
				return this._CopiesAvailable;
			}
			set
			{
				if ((this._CopiesAvailable != value))
				{
					this.OnCopiesAvailableChanging(value);
					this.SendPropertyChanging();
					this._CopiesAvailable = value;
					this.SendPropertyChanged("CopiesAvailable");
					this.OnCopiesAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CopiesOut", DbType="Int NOT NULL")]
		public int CopiesOut
		{
			get
			{
				return this._CopiesOut;
			}
			set
			{
				if ((this._CopiesOut != value))
				{
					this.OnCopiesOutChanging(value);
					this.SendPropertyChanging();
					this._CopiesOut = value;
					this.SendPropertyChanged("CopiesOut");
					this.OnCopiesOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectArea", DbType="VarChar(50)")]
		public string SubjectArea
		{
			get
			{
				return this._SubjectArea;
			}
			set
			{
				if ((this._SubjectArea != value))
				{
					this.OnSubjectAreaChanging(value);
					this.SendPropertyChanging();
					this._SubjectArea = value;
					this.SendPropertyChanged("SubjectArea");
					this.OnSubjectAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearOfPublication", DbType="VarChar(50)")]
		public string YearOfPublication
		{
			get
			{
				return this._YearOfPublication;
			}
			set
			{
				if ((this._YearOfPublication != value))
				{
					this.OnYearOfPublicationChanging(value);
					this.SendPropertyChanging();
					this._YearOfPublication = value;
					this.SendPropertyChanged("YearOfPublication");
					this.OnYearOfPublicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Keyword", DbType="VarChar(30)")]
		public string Keyword
		{
			get
			{
				return this._Keyword;
			}
			set
			{
				if ((this._Keyword != value))
				{
					this.OnKeywordChanging(value);
					this.SendPropertyChanging();
					this._Keyword = value;
					this.SendPropertyChanged("Keyword");
					this.OnKeywordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookID", DbType="Int")]
		public System.Nullable<int> BookID
		{
			get
			{
				return this._BookID;
			}
			set
			{
				if ((this._BookID != value))
				{
					this.OnBookIDChanging(value);
					this.SendPropertyChanging();
					this._BookID = value;
					this.SendPropertyChanged("BookID");
					this.OnBookIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShelfNumber", DbType="VarChar(30)")]
		public string ShelfNumber
		{
			get
			{
				return this._ShelfNumber;
			}
			set
			{
				if ((this._ShelfNumber != value))
				{
					this.OnShelfNumberChanging(value);
					this.SendPropertyChanging();
					this._ShelfNumber = value;
					this.SendPropertyChanged("ShelfNumber");
					this.OnShelfNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(30)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublisherID", DbType="Int")]
		public System.Nullable<int> PublisherID
		{
			get
			{
				return this._PublisherID;
			}
			set
			{
				if ((this._PublisherID != value))
				{
					if (this._Publisher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPublisherIDChanging(value);
					this.SendPropertyChanging();
					this._PublisherID = value;
					this.SendPropertyChanged("PublisherID");
					this.OnPublisherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Publisher_Book", Storage="_Publisher", ThisKey="PublisherID", OtherKey="PublisherID", IsForeignKey=true)]
		public Publisher Publisher
		{
			get
			{
				return this._Publisher.Entity;
			}
			set
			{
				Publisher previousValue = this._Publisher.Entity;
				if (((previousValue != value) 
							|| (this._Publisher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Publisher.Entity = null;
						previousValue.Books.Remove(this);
					}
					this._Publisher.Entity = value;
					if ((value != null))
					{
						value.Books.Add(this);
						this._PublisherID = value.PublisherID;
					}
					else
					{
						this._PublisherID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Publisher");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Journal")]
	public partial class Journal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JournalID;
		
		private string _Title;
		
		private string _ResearchSociety;
		
		private int _CopiesTotal;
		
		private int _CopiesAvailable;
		
		private int _CopiesOut;
		
		private string _SubjectArea;
		
		private string _YearOfPublication;
		
		private string _Keyword;
		
		private System.Nullable<int> _JournalNumberID;
		
		private string _ShelfNumber;
		
		private string _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJournalIDChanging(int value);
    partial void OnJournalIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnResearchSocietyChanging(string value);
    partial void OnResearchSocietyChanged();
    partial void OnCopiesTotalChanging(int value);
    partial void OnCopiesTotalChanged();
    partial void OnCopiesAvailableChanging(int value);
    partial void OnCopiesAvailableChanged();
    partial void OnCopiesOutChanging(int value);
    partial void OnCopiesOutChanged();
    partial void OnSubjectAreaChanging(string value);
    partial void OnSubjectAreaChanged();
    partial void OnYearOfPublicationChanging(string value);
    partial void OnYearOfPublicationChanged();
    partial void OnKeywordChanging(string value);
    partial void OnKeywordChanged();
    partial void OnJournalNumberIDChanging(System.Nullable<int> value);
    partial void OnJournalNumberIDChanged();
    partial void OnShelfNumberChanging(string value);
    partial void OnShelfNumberChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public Journal()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int JournalID
		{
			get
			{
				return this._JournalID;
			}
			set
			{
				if ((this._JournalID != value))
				{
					this.OnJournalIDChanging(value);
					this.SendPropertyChanging();
					this._JournalID = value;
					this.SendPropertyChanged("JournalID");
					this.OnJournalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResearchSociety", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ResearchSociety
		{
			get
			{
				return this._ResearchSociety;
			}
			set
			{
				if ((this._ResearchSociety != value))
				{
					this.OnResearchSocietyChanging(value);
					this.SendPropertyChanging();
					this._ResearchSociety = value;
					this.SendPropertyChanged("ResearchSociety");
					this.OnResearchSocietyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CopiesTotal", DbType="Int NOT NULL")]
		public int CopiesTotal
		{
			get
			{
				return this._CopiesTotal;
			}
			set
			{
				if ((this._CopiesTotal != value))
				{
					this.OnCopiesTotalChanging(value);
					this.SendPropertyChanging();
					this._CopiesTotal = value;
					this.SendPropertyChanged("CopiesTotal");
					this.OnCopiesTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CopiesAvailable", DbType="Int NOT NULL")]
		public int CopiesAvailable
		{
			get
			{
				return this._CopiesAvailable;
			}
			set
			{
				if ((this._CopiesAvailable != value))
				{
					this.OnCopiesAvailableChanging(value);
					this.SendPropertyChanging();
					this._CopiesAvailable = value;
					this.SendPropertyChanged("CopiesAvailable");
					this.OnCopiesAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CopiesOut", DbType="Int NOT NULL")]
		public int CopiesOut
		{
			get
			{
				return this._CopiesOut;
			}
			set
			{
				if ((this._CopiesOut != value))
				{
					this.OnCopiesOutChanging(value);
					this.SendPropertyChanging();
					this._CopiesOut = value;
					this.SendPropertyChanged("CopiesOut");
					this.OnCopiesOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectArea", DbType="VarChar(50)")]
		public string SubjectArea
		{
			get
			{
				return this._SubjectArea;
			}
			set
			{
				if ((this._SubjectArea != value))
				{
					this.OnSubjectAreaChanging(value);
					this.SendPropertyChanging();
					this._SubjectArea = value;
					this.SendPropertyChanged("SubjectArea");
					this.OnSubjectAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearOfPublication", DbType="VarChar(50)")]
		public string YearOfPublication
		{
			get
			{
				return this._YearOfPublication;
			}
			set
			{
				if ((this._YearOfPublication != value))
				{
					this.OnYearOfPublicationChanging(value);
					this.SendPropertyChanging();
					this._YearOfPublication = value;
					this.SendPropertyChanged("YearOfPublication");
					this.OnYearOfPublicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Keyword", DbType="VarChar(30)")]
		public string Keyword
		{
			get
			{
				return this._Keyword;
			}
			set
			{
				if ((this._Keyword != value))
				{
					this.OnKeywordChanging(value);
					this.SendPropertyChanging();
					this._Keyword = value;
					this.SendPropertyChanged("Keyword");
					this.OnKeywordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalNumberID", DbType="Int")]
		public System.Nullable<int> JournalNumberID
		{
			get
			{
				return this._JournalNumberID;
			}
			set
			{
				if ((this._JournalNumberID != value))
				{
					this.OnJournalNumberIDChanging(value);
					this.SendPropertyChanging();
					this._JournalNumberID = value;
					this.SendPropertyChanged("JournalNumberID");
					this.OnJournalNumberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShelfNumber", DbType="VarChar(30)")]
		public string ShelfNumber
		{
			get
			{
				return this._ShelfNumber;
			}
			set
			{
				if ((this._ShelfNumber != value))
				{
					this.OnShelfNumberChanging(value);
					this.SendPropertyChanging();
					this._ShelfNumber = value;
					this.SendPropertyChanged("ShelfNumber");
					this.OnShelfNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(30)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DVD")]
	public partial class DVD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DVDID;
		
		private string _Title;
		
		private string _Producer;
		
		private int _CopiesTotal;
		
		private int _CopiesAvailable;
		
		private int _CopiesOut;
		
		private string _SubjectArea;
		
		private string _YearOfPublication;
		
		private string _Keyword;
		
		private System.Nullable<int> _DVDNumberID;
		
		private System.Nullable<int> _ShelfNumber;
		
		private string _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDVDIDChanging(int value);
    partial void OnDVDIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnProducerChanging(string value);
    partial void OnProducerChanged();
    partial void OnCopiesTotalChanging(int value);
    partial void OnCopiesTotalChanged();
    partial void OnCopiesAvailableChanging(int value);
    partial void OnCopiesAvailableChanged();
    partial void OnCopiesOutChanging(int value);
    partial void OnCopiesOutChanged();
    partial void OnSubjectAreaChanging(string value);
    partial void OnSubjectAreaChanged();
    partial void OnYearOfPublicationChanging(string value);
    partial void OnYearOfPublicationChanged();
    partial void OnKeywordChanging(string value);
    partial void OnKeywordChanged();
    partial void OnDVDNumberIDChanging(System.Nullable<int> value);
    partial void OnDVDNumberIDChanged();
    partial void OnShelfNumberChanging(System.Nullable<int> value);
    partial void OnShelfNumberChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public DVD()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVDID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DVDID
		{
			get
			{
				return this._DVDID;
			}
			set
			{
				if ((this._DVDID != value))
				{
					this.OnDVDIDChanging(value);
					this.SendPropertyChanging();
					this._DVDID = value;
					this.SendPropertyChanged("DVDID");
					this.OnDVDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Producer", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Producer
		{
			get
			{
				return this._Producer;
			}
			set
			{
				if ((this._Producer != value))
				{
					this.OnProducerChanging(value);
					this.SendPropertyChanging();
					this._Producer = value;
					this.SendPropertyChanged("Producer");
					this.OnProducerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CopiesTotal", DbType="Int NOT NULL")]
		public int CopiesTotal
		{
			get
			{
				return this._CopiesTotal;
			}
			set
			{
				if ((this._CopiesTotal != value))
				{
					this.OnCopiesTotalChanging(value);
					this.SendPropertyChanging();
					this._CopiesTotal = value;
					this.SendPropertyChanged("CopiesTotal");
					this.OnCopiesTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CopiesAvailable", DbType="Int NOT NULL")]
		public int CopiesAvailable
		{
			get
			{
				return this._CopiesAvailable;
			}
			set
			{
				if ((this._CopiesAvailable != value))
				{
					this.OnCopiesAvailableChanging(value);
					this.SendPropertyChanging();
					this._CopiesAvailable = value;
					this.SendPropertyChanged("CopiesAvailable");
					this.OnCopiesAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CopiesOut", DbType="Int NOT NULL")]
		public int CopiesOut
		{
			get
			{
				return this._CopiesOut;
			}
			set
			{
				if ((this._CopiesOut != value))
				{
					this.OnCopiesOutChanging(value);
					this.SendPropertyChanging();
					this._CopiesOut = value;
					this.SendPropertyChanged("CopiesOut");
					this.OnCopiesOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectArea", DbType="VarChar(50)")]
		public string SubjectArea
		{
			get
			{
				return this._SubjectArea;
			}
			set
			{
				if ((this._SubjectArea != value))
				{
					this.OnSubjectAreaChanging(value);
					this.SendPropertyChanging();
					this._SubjectArea = value;
					this.SendPropertyChanged("SubjectArea");
					this.OnSubjectAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearOfPublication", DbType="VarChar(50)")]
		public string YearOfPublication
		{
			get
			{
				return this._YearOfPublication;
			}
			set
			{
				if ((this._YearOfPublication != value))
				{
					this.OnYearOfPublicationChanging(value);
					this.SendPropertyChanging();
					this._YearOfPublication = value;
					this.SendPropertyChanged("YearOfPublication");
					this.OnYearOfPublicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Keyword", DbType="VarChar(30)")]
		public string Keyword
		{
			get
			{
				return this._Keyword;
			}
			set
			{
				if ((this._Keyword != value))
				{
					this.OnKeywordChanging(value);
					this.SendPropertyChanging();
					this._Keyword = value;
					this.SendPropertyChanged("Keyword");
					this.OnKeywordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVDNumberID", DbType="Int")]
		public System.Nullable<int> DVDNumberID
		{
			get
			{
				return this._DVDNumberID;
			}
			set
			{
				if ((this._DVDNumberID != value))
				{
					this.OnDVDNumberIDChanging(value);
					this.SendPropertyChanging();
					this._DVDNumberID = value;
					this.SendPropertyChanged("DVDNumberID");
					this.OnDVDNumberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShelfNumber", DbType="Int")]
		public System.Nullable<int> ShelfNumber
		{
			get
			{
				return this._ShelfNumber;
			}
			set
			{
				if ((this._ShelfNumber != value))
				{
					this.OnShelfNumberChanging(value);
					this.SendPropertyChanging();
					this._ShelfNumber = value;
					this.SendPropertyChanged("ShelfNumber");
					this.OnShelfNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConferenceProceeding")]
	public partial class ConferenceProceeding : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ConfID;
		
		private string _Title;
		
		private string _Author;
		
		private int _CopiesTotal;
		
		private int _CopiesAvailable;
		
		private int _CopiesOut;
		
		private string _SubjectArea;
		
		private string _YearOfPublication;
		
		private string _Keyword;
		
		private System.Nullable<int> _ConfNumberID;
		
		private string _ShelfNumber;
		
		private string _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConfIDChanging(int value);
    partial void OnConfIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnCopiesTotalChanging(int value);
    partial void OnCopiesTotalChanged();
    partial void OnCopiesAvailableChanging(int value);
    partial void OnCopiesAvailableChanged();
    partial void OnCopiesOutChanging(int value);
    partial void OnCopiesOutChanged();
    partial void OnSubjectAreaChanging(string value);
    partial void OnSubjectAreaChanged();
    partial void OnYearOfPublicationChanging(string value);
    partial void OnYearOfPublicationChanged();
    partial void OnKeywordChanging(string value);
    partial void OnKeywordChanged();
    partial void OnConfNumberIDChanging(System.Nullable<int> value);
    partial void OnConfNumberIDChanged();
    partial void OnShelfNumberChanging(string value);
    partial void OnShelfNumberChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public ConferenceProceeding()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ConfID
		{
			get
			{
				return this._ConfID;
			}
			set
			{
				if ((this._ConfID != value))
				{
					this.OnConfIDChanging(value);
					this.SendPropertyChanging();
					this._ConfID = value;
					this.SendPropertyChanged("ConfID");
					this.OnConfIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="VarChar(100)")]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._Author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CopiesTotal", DbType="Int NOT NULL")]
		public int CopiesTotal
		{
			get
			{
				return this._CopiesTotal;
			}
			set
			{
				if ((this._CopiesTotal != value))
				{
					this.OnCopiesTotalChanging(value);
					this.SendPropertyChanging();
					this._CopiesTotal = value;
					this.SendPropertyChanged("CopiesTotal");
					this.OnCopiesTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CopiesAvailable", DbType="Int NOT NULL")]
		public int CopiesAvailable
		{
			get
			{
				return this._CopiesAvailable;
			}
			set
			{
				if ((this._CopiesAvailable != value))
				{
					this.OnCopiesAvailableChanging(value);
					this.SendPropertyChanging();
					this._CopiesAvailable = value;
					this.SendPropertyChanged("CopiesAvailable");
					this.OnCopiesAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CopiesOut", DbType="Int NOT NULL")]
		public int CopiesOut
		{
			get
			{
				return this._CopiesOut;
			}
			set
			{
				if ((this._CopiesOut != value))
				{
					this.OnCopiesOutChanging(value);
					this.SendPropertyChanging();
					this._CopiesOut = value;
					this.SendPropertyChanged("CopiesOut");
					this.OnCopiesOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectArea", DbType="VarChar(50)")]
		public string SubjectArea
		{
			get
			{
				return this._SubjectArea;
			}
			set
			{
				if ((this._SubjectArea != value))
				{
					this.OnSubjectAreaChanging(value);
					this.SendPropertyChanging();
					this._SubjectArea = value;
					this.SendPropertyChanged("SubjectArea");
					this.OnSubjectAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearOfPublication", DbType="VarChar(50)")]
		public string YearOfPublication
		{
			get
			{
				return this._YearOfPublication;
			}
			set
			{
				if ((this._YearOfPublication != value))
				{
					this.OnYearOfPublicationChanging(value);
					this.SendPropertyChanging();
					this._YearOfPublication = value;
					this.SendPropertyChanged("YearOfPublication");
					this.OnYearOfPublicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Keyword", DbType="VarChar(30)")]
		public string Keyword
		{
			get
			{
				return this._Keyword;
			}
			set
			{
				if ((this._Keyword != value))
				{
					this.OnKeywordChanging(value);
					this.SendPropertyChanging();
					this._Keyword = value;
					this.SendPropertyChanged("Keyword");
					this.OnKeywordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfNumberID", DbType="Int")]
		public System.Nullable<int> ConfNumberID
		{
			get
			{
				return this._ConfNumberID;
			}
			set
			{
				if ((this._ConfNumberID != value))
				{
					this.OnConfNumberIDChanging(value);
					this.SendPropertyChanging();
					this._ConfNumberID = value;
					this.SendPropertyChanged("ConfNumberID");
					this.OnConfNumberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShelfNumber", DbType="VarChar(30)")]
		public string ShelfNumber
		{
			get
			{
				return this._ShelfNumber;
			}
			set
			{
				if ((this._ShelfNumber != value))
				{
					this.OnShelfNumberChanging(value);
					this.SendPropertyChanging();
					this._ShelfNumber = value;
					this.SendPropertyChanged("ShelfNumber");
					this.OnShelfNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(30)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReferenceBook")]
	public partial class ReferenceBook : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RefBookID;
		
		private string _Title;
		
		private string _Author;
		
		private int _CopiesTotal;
		
		private int _CopiesAvailable;
		
		private int _CopiesOut;
		
		private string _SubjectArea;
		
		private string _YearOfPublication;
		
		private string _Keyword;
		
		private string _ShelfNumber;
		
		private string _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRefBookIDChanging(int value);
    partial void OnRefBookIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnCopiesTotalChanging(int value);
    partial void OnCopiesTotalChanged();
    partial void OnCopiesAvailableChanging(int value);
    partial void OnCopiesAvailableChanged();
    partial void OnCopiesOutChanging(int value);
    partial void OnCopiesOutChanged();
    partial void OnSubjectAreaChanging(string value);
    partial void OnSubjectAreaChanged();
    partial void OnYearOfPublicationChanging(string value);
    partial void OnYearOfPublicationChanged();
    partial void OnKeywordChanging(string value);
    partial void OnKeywordChanged();
    partial void OnShelfNumberChanging(string value);
    partial void OnShelfNumberChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public ReferenceBook()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefBookID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RefBookID
		{
			get
			{
				return this._RefBookID;
			}
			set
			{
				if ((this._RefBookID != value))
				{
					this.OnRefBookIDChanging(value);
					this.SendPropertyChanging();
					this._RefBookID = value;
					this.SendPropertyChanged("RefBookID");
					this.OnRefBookIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="VarChar(100)")]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._Author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CopiesTotal", DbType="Int NOT NULL")]
		public int CopiesTotal
		{
			get
			{
				return this._CopiesTotal;
			}
			set
			{
				if ((this._CopiesTotal != value))
				{
					this.OnCopiesTotalChanging(value);
					this.SendPropertyChanging();
					this._CopiesTotal = value;
					this.SendPropertyChanged("CopiesTotal");
					this.OnCopiesTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CopiesAvailable", DbType="Int NOT NULL")]
		public int CopiesAvailable
		{
			get
			{
				return this._CopiesAvailable;
			}
			set
			{
				if ((this._CopiesAvailable != value))
				{
					this.OnCopiesAvailableChanging(value);
					this.SendPropertyChanging();
					this._CopiesAvailable = value;
					this.SendPropertyChanged("CopiesAvailable");
					this.OnCopiesAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CopiesOut", DbType="Int NOT NULL")]
		public int CopiesOut
		{
			get
			{
				return this._CopiesOut;
			}
			set
			{
				if ((this._CopiesOut != value))
				{
					this.OnCopiesOutChanging(value);
					this.SendPropertyChanging();
					this._CopiesOut = value;
					this.SendPropertyChanged("CopiesOut");
					this.OnCopiesOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectArea", DbType="VarChar(50)")]
		public string SubjectArea
		{
			get
			{
				return this._SubjectArea;
			}
			set
			{
				if ((this._SubjectArea != value))
				{
					this.OnSubjectAreaChanging(value);
					this.SendPropertyChanging();
					this._SubjectArea = value;
					this.SendPropertyChanged("SubjectArea");
					this.OnSubjectAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearOfPublication", DbType="VarChar(50)")]
		public string YearOfPublication
		{
			get
			{
				return this._YearOfPublication;
			}
			set
			{
				if ((this._YearOfPublication != value))
				{
					this.OnYearOfPublicationChanging(value);
					this.SendPropertyChanging();
					this._YearOfPublication = value;
					this.SendPropertyChanged("YearOfPublication");
					this.OnYearOfPublicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Keyword", DbType="VarChar(30)")]
		public string Keyword
		{
			get
			{
				return this._Keyword;
			}
			set
			{
				if ((this._Keyword != value))
				{
					this.OnKeywordChanging(value);
					this.SendPropertyChanging();
					this._Keyword = value;
					this.SendPropertyChanged("Keyword");
					this.OnKeywordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShelfNumber", DbType="VarChar(30)")]
		public string ShelfNumber
		{
			get
			{
				return this._ShelfNumber;
			}
			set
			{
				if ((this._ShelfNumber != value))
				{
					this.OnShelfNumberChanging(value);
					this.SendPropertyChanging();
					this._ShelfNumber = value;
					this.SendPropertyChanged("ShelfNumber");
					this.OnShelfNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(30)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LibraryMember")]
	public partial class LibraryMember : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MemberID;
		
		private string _NameFirst;
		
		private string _NameInitial;
		
		private string _NameLast;
		
		private string _Username;
		
		private string _Password;
		
		private string _ConfirmPassword;
		
		private string _Address;
		
		private string _Street;
		
		private string _Town;
		
		private string _County;
		
		private string _Country;
		
		private string _Postcode;
		
		private int _Classification;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMemberIDChanging(int value);
    partial void OnMemberIDChanged();
    partial void OnNameFirstChanging(string value);
    partial void OnNameFirstChanged();
    partial void OnNameInitialChanging(string value);
    partial void OnNameInitialChanged();
    partial void OnNameLastChanging(string value);
    partial void OnNameLastChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnConfirmPasswordChanging(string value);
    partial void OnConfirmPasswordChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnTownChanging(string value);
    partial void OnTownChanged();
    partial void OnCountyChanging(string value);
    partial void OnCountyChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnPostcodeChanging(string value);
    partial void OnPostcodeChanged();
    partial void OnClassificationChanging(int value);
    partial void OnClassificationChanged();
    #endregion
		
		public LibraryMember()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameFirst", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string NameFirst
		{
			get
			{
				return this._NameFirst;
			}
			set
			{
				if ((this._NameFirst != value))
				{
					this.OnNameFirstChanging(value);
					this.SendPropertyChanging();
					this._NameFirst = value;
					this.SendPropertyChanged("NameFirst");
					this.OnNameFirstChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameInitial", DbType="VarChar(30)")]
		public string NameInitial
		{
			get
			{
				return this._NameInitial;
			}
			set
			{
				if ((this._NameInitial != value))
				{
					this.OnNameInitialChanging(value);
					this.SendPropertyChanging();
					this._NameInitial = value;
					this.SendPropertyChanged("NameInitial");
					this.OnNameInitialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameLast", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string NameLast
		{
			get
			{
				return this._NameLast;
			}
			set
			{
				if ((this._NameLast != value))
				{
					this.OnNameLastChanging(value);
					this.SendPropertyChanging();
					this._NameLast = value;
					this.SendPropertyChanged("NameLast");
					this.OnNameLastChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(30)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(30)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmPassword", DbType="VarChar(30)")]
		public string ConfirmPassword
		{
			get
			{
				return this._ConfirmPassword;
			}
			set
			{
				if ((this._ConfirmPassword != value))
				{
					this.OnConfirmPasswordChanging(value);
					this.SendPropertyChanging();
					this._ConfirmPassword = value;
					this.SendPropertyChanged("ConfirmPassword");
					this.OnConfirmPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="VarChar(30)")]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Town", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Town
		{
			get
			{
				return this._Town;
			}
			set
			{
				if ((this._Town != value))
				{
					this.OnTownChanging(value);
					this.SendPropertyChanging();
					this._Town = value;
					this.SendPropertyChanged("Town");
					this.OnTownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_County", DbType="VarChar(30)")]
		public string County
		{
			get
			{
				return this._County;
			}
			set
			{
				if ((this._County != value))
				{
					this.OnCountyChanging(value);
					this.SendPropertyChanging();
					this._County = value;
					this.SendPropertyChanged("County");
					this.OnCountyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="VarChar(30)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postcode", DbType="VarChar(30)")]
		public string Postcode
		{
			get
			{
				return this._Postcode;
			}
			set
			{
				if ((this._Postcode != value))
				{
					this.OnPostcodeChanging(value);
					this.SendPropertyChanging();
					this._Postcode = value;
					this.SendPropertyChanged("Postcode");
					this.OnPostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Classification", DbType="Int NOT NULL")]
		public int Classification
		{
			get
			{
				return this._Classification;
			}
			set
			{
				if ((this._Classification != value))
				{
					this.OnClassificationChanging(value);
					this.SendPropertyChanging();
					this._Classification = value;
					this.SendPropertyChanged("Classification");
					this.OnClassificationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
